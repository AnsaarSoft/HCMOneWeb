@using HCM.API.Models
<MudDialog>
    <DialogContent>
        @if (Loading)
        {
                            <center><MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true" /></center>
        }
        @if (Settings.DialogFor == "Shifts")
        {
                 <MudTable Items="@oListShift" Class="table-setting" Dense="true" Hover="true" Bordered="true" Striped="true"
                    Loading="@Loading" LoadingProgressColor="Color.Primary" T="VMMstShiftDetail" @bind-SelectedItem="oModelShiftDetail">
                        <ToolBarContent>
                            <MudText Typo="Typo.h6">Shift Detail</MudText>
                            <MudSpacer />                        
                         </ToolBarContent>
                         <HeaderContent>
                                <MudTh>Day</MudTh>
                                <MudTh>Start Time</MudTh>
                                <MudTh>End Time</MudTh>
                                <MudTh>Duration</MudTh>
                                <MudTh>Buffer Start Time</MudTh>
                                <MudTh>Buffer End Time</MudTh>
                                <MudTh>Start Grace Time</MudTh>
                                <MudTh>End Grace Time</MudTh>
                                <MudTh>Break Time</MudTh>
                                <MudTh>Out Overlap</MudTh>
                                <MudTh>Expected In</MudTh>
                                <MudTh>Expected Out</MudTh>
                         </HeaderContent>
                         <RowTemplate>
                             <MudTd DataLabel="Code">@context.Day</MudTd>                       
                             <MudTd DataLabel="Code">
                                 <MudTimePicker PickerVariant="PickerVariant.Dialog" Label="24 hours" @bind-Time="@context.TSStartTime" HelperText="Start Time" Variant="Variant.Text"
                            Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Timer"/>
                             </MudTd>                       
                             <MudTd DataLabel="Code">
                                 <MudTimePicker PickerVariant="PickerVariant.Dialog" PickerClosed="@((e) => OnValueChanged(context.Day))" Label="24 hours" @bind-Time="@context.TSEndTime" HelperText="End Time" Variant="Variant.Text"
                             Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Timer"/>
                             </MudTd>   
                             <MudTd>
                                <MudTimePicker Disabled="true" PickerVariant="PickerVariant.Dialog" Label="24 hours" @bind-Time="@context.TSDuration" HelperText="Duration" Variant="Variant.Text"
                            Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Timer"/>
                             </MudTd>
                             <MudTd>
                                 <MudTimePicker PickerVariant="PickerVariant.Dialog" Label="Periods" @bind-Time="@context.TSBufferStartTime" HelperText="Buffer Start Time" Variant="Variant.Text"
                             Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Timer"/>
                             </MudTd>
                             <MudTd>
                                 <MudTimePicker PickerVariant="PickerVariant.Dialog" Label="Periods" @bind-Time="@context.TSBufferEndTime" HelperText="Buffer End Time" Variant="Variant.Text"
                             Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Timer"/>
                             </MudTd>
                             <MudTd>
                                 <MudTimePicker PickerVariant="PickerVariant.Dialog" Label="Periods" @bind-Time="@context.TSGraceStartTime" HelperText="Grace Start Time" Variant="Variant.Text"
                             Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Timer"/>
                             </MudTd>
                             <MudTd>
                                 <MudTimePicker PickerVariant="PickerVariant.Dialog" Label="Periods" @bind-Time="@context.TSGraceEndTime" HelperText="Grace End Time" Variant="Variant.Text"
                             Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Timer"/>
                             </MudTd>
                             <MudTd>
                                 <MudTimePicker PickerVariant="PickerVariant.Dialog" Label="Periods" @bind-Time="@context.TSBreakTime" HelperText="Break Time" Variant="Variant.Text"
                             Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Timer"/>
                             </MudTd>
                             <MudTd>
                                 <MudSwitch @bind-Checked="@context.FlgOutOverlap" ThumbIcon="@(context.FlgOutOverlap==true ? Icons.Material.Filled.Done : Icons.Material.Filled.Close)" ThumbIconColor="@(context.FlgOutOverlap==true ? Color.Primary : Color.Error)" Color="@(context.FlgOutOverlap==true ? Color.Info : Color.Error)">
                                         <span>@(context.FlgOutOverlap==true ? "Enable Out Overlap" : "Disbale Out Overlap")</span>
                                 </MudSwitch>
                             </MudTd>
                             <MudTd>
                                 <MudSwitch @bind-Checked="@context.FlgExpectedIn" ThumbIcon="@(context.FlgExpectedIn==true ? Icons.Material.Filled.Done : Icons.Material.Filled.Close)" ThumbIconColor="@(context.FlgExpectedIn==true ? Color.Primary : Color.Error)" Color="@(context.FlgExpectedIn==true ? Color.Info : Color.Error)">
                                         <span>@(context.FlgExpectedIn==true ? "Enable Expected In" : "Disbale Expected In")</span>
                                 </MudSwitch>
                             </MudTd>
                             <MudTd>
                                 <MudSwitch @bind-Checked="@context.FlgExpectedOut" ThumbIcon="@(context.FlgExpectedOut==true ? Icons.Material.Filled.Done : Icons.Material.Filled.Close)" ThumbIconColor="@(context.FlgExpectedOut==true ? Color.Primary : Color.Error)" Color="@(context.FlgExpectedOut==true ? Color.Info : Color.Error)">
                                         <span>@(context.FlgExpectedOut==true ? "Enable Expected Out" : "Disbale Expected Out")</span>
                                 </MudSwitch>
                             </MudTd>
                         </RowTemplate>
                         <PagerContent>
                             <MudTablePager />
                         </PagerContent>
                     </MudTable>                     
        }  
        @if (Settings.DialogFor == "TaxSetup")
        {
                <MudText Typo="Typo.h6">Tax Setup Detail</MudText>
                    <MudSpacer />    
                    <MudDivider />
                <MudGrid class="search-action-block align-items-center">
                    <MudItem xs="4" sm="4" md="4" lg="4">
                        <MudTextField @bind-Value="oModelTaxSetupDetail.TaxCode" T="string" Disabled="@DisabledCode" Mask="@AlphaNumericMask" MaxLength="20" Counter="20" HelperText="Enter Tax Code" Immediate="true" Clearable="true" Label="Tax Code" Variant="Variant.Text" 
                        Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.TextFields" />
                    </MudItem> 
                    <MudItem xs="4" sm="4" md="4" lg="4">
                        <MudTextField @bind-Value="oModelTaxSetupDetail.Description" T="string" MaxLength="50" Counter="50" HelperText="Enter Description" Immediate="true" Clearable="true" Label="Description" Variant="Variant.Text" 
                        Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.TextFields" />
                    </MudItem> 
                    <MudItem xs="2" sm="2" md="2" lg="2" class="text-right">
                        <MudSwitch @bind-Checked="oModelTaxSetupDetail.FlgActive" ThumbIcon="@(oModelTaxSetupDetail.FlgActive==true ? Icons.Material.Filled.Done : Icons.Material.Filled.Close)" ThumbIconColor="@(oModelTaxSetupDetail.FlgActive==true ? Color.Primary : Color.Error)" Color="@(oModelTaxSetupDetail.FlgActive==true ? Color.Info : Color.Error)">
                                <span>@(oModelTaxSetupDetail.FlgActive==true ? "Active" : "In Active")</span>
                        </MudSwitch>
                    </MudItem>
                     <MudItem xs="2" sm="2" md="2" lg="2" class="text-right">                    
                    </MudItem>
                    <MudItem xs="4" sm="4" md="4" lg="4">
                        <MudNumericField @bind-Value="oModelTaxSetupDetail.MinAmount" Min="0" HelperText="Enter Min Amount"  Immediate="true" Clearable="true" Label="Min Amount" 
                       Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Numbers" Variant="Variant.Text" > </MudNumericField>
                    </MudItem>
                    <MudItem xs="4" sm="4" md="4" lg="4">
                        <MudNumericField @bind-Value="oModelTaxSetupDetail.MaxAmount" Min="0" HelperText="Enter Max Amount" Immediate="true" Clearable="true" Label="Max Amount" 
                        Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Numbers" Variant="Variant.Text" > </MudNumericField>
                    </MudItem>
                    <MudItem xs="4" sm="4" md="4" lg="4">
                        <MudNumericField @bind-Value="oModelTaxSetupDetail.TaxValue" Min="0" HelperText="Enter Tax Value" MaxLength="3" Counter="3" Immediate="true" Clearable="true" Label="Tax Value"
                    Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Percent" Variant="Variant.Text" > </MudNumericField>
                    </MudItem>
                    <MudItem xs="4" sm="4" md="4" lg="4">
                        <MudNumericField @bind-Value="oModelTaxSetupDetail.FixTerm" Min="0" HelperText="Enter Fix Term" Immediate="true" Clearable="true" Label="Fix Term" 
                     Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Percent" Variant="Variant.Text" > </MudNumericField>
                    </MudItem>
                    <MudItem xs="4" sm="4" md="4" lg="4">
                        <MudNumericField @bind-Value="oModelTaxSetupDetail.AdditionalDisc" Min="0" HelperText="Enter Additional Disc" Immediate="true" Clearable="true" Label="Additional Disc" 
                     Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Percent" Variant="Variant.Text" > </MudNumericField>
                    </MudItem>
                </MudGrid>              
        }
        @if (Settings.DialogFor == "Bonus")
        {
                        <MudTextField @bind-Value="oModelBonusDetail.Code" T="string" MaxLength="50" Counter="50" HelperText="Enter Code" Immediate="true" Clearable="true" Label="Code" Variant="Variant.Text" 
                    Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.TextFields" />

                        <MudItem xs="4" sm="4" md="4" lg="4">
                            <MudSelect @bind-Value="oModelBonusDetail.ValueType" Label="Value Type" HelperText="Select Value Type" AdornmentIcon="@Icons.Material.Filled.MergeType" Adornment="Adornment.Start">
                    @foreach (MstLove Love in oLoveList.Where(x => x.Type == "Val_Type").ToList())
                    {
                                  <MudSelectItem Value="@Love.Code">@Love.Code - @Love.Value</MudSelectItem>
                    }
                        </MudSelect>
                    </MudItem>
                        <MudItem xs="4" sm="4" md="4" lg="4">
                            <MudSelect @bind-Value="oModelBonusDetail.ElementType" Label="Element Type" HelperText="Select Element Type" AdornmentIcon="@Icons.Material.Filled.MergeType" Adornment="Adornment.Start">
                    @foreach (MstElement Element in oElementList.Where(a => a.FlgBonus == true).ToList())
                    {
                                   <MudSelectItem Value="@Element.Id">@Element.Description</MudSelectItem>
                    }
                        </MudSelect>
                    </MudItem>

                        <MudNumericField @bind-Value="oModelBonusDetail.SalaryFrom" HelperText="Enter Salary From"  Immediate="true" Clearable="true" Label="Salary From" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.TextFields" Variant="Variant.Text" > </MudNumericField>

                        <MudNumericField @bind-Value="oModelBonusDetail.SalaryTo" HelperText="Enter Salary To" Immediate="true" Clearable="true" Label="Salary To" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.TextFields" Variant="Variant.Text" > </MudNumericField>

                        <MudNumericField @bind-Value="oModelBonusDetail.ScaleFrom" HelperText="Enter Scale From" MaxLength="3" Counter="3" Immediate="true" Clearable="true" Label="Scale From" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.TextFields" Variant="Variant.Text" > </MudNumericField>

                        <MudNumericField @bind-Value="oModelBonusDetail.ScaleTo" HelperText="Enter Scale To" Immediate="true" Clearable="true" Label="Scale To" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.TextFields" Variant="Variant.Text" > </MudNumericField>

                        <MudNumericField @bind-Value="oModelBonusDetail.BonusPercentage" HelperText="Enter Bonus Percentage" Immediate="true" Clearable="true" Label="Bonus Percentage" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.TextFields" Variant="Variant.Text" > </MudNumericField>                                        
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>
