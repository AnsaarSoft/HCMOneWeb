@page "/AttendanceProcessing"
@using HCM.API.Models

<div class="container-fluid page-content-setting shift-scheduler">
    <div class="row">
        <div class="col-sm-10">
            <h3>Attendance Processing</h3>
            <MudDivider />
        </div>
        <div class="col-sm-2 custom-btn-design text-right">
            @*<MudButton Variant="Variant.Filled" OnClick="@((e) => OpenDialog(maxWidth))" StartIcon="@Icons.Filled.RemoveRedEye" Color="Color.Info" Size="Size.Small">View All</MudButton>*@
        </div>
    </div>

    <div class="row mt-5">
        <div class="col-sm-12">
            <MudGrid class="search-action-block align-items-center block-design">
                <MudItem xs="12" sm="12" md="12" lg="12">
                    <h3>Filter</h3>
                </MudItem>
                <MudItem xs="3" sm="3" md="3" lg="3">
                    <MudAutocomplete T="MstEmployee" @bind-Value="oModelEmployeeFrom" SearchFunc="@SearchEmployeeFrom" Clearable="true" Label="Select Employee From" Variant="Variant.Text" ResetValueOnEmptyText="true" CoerceText="true" CoerceValue="true"
                                     Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" ToStringFunc="@(e=> e==null?null : $"{e.EmpId}")" />
                </MudItem>
                <MudItem xs="3" sm="3" md="3" lg="3">
                    <MudAutocomplete T="MstEmployee" @bind-Value="oModelEmployeeTo" SearchFunc="@SearchEmployeeTo" Clearable="true" Label="Select Employee To" Variant="Variant.Text" ResetValueOnEmptyText="true" CoerceText="true" CoerceValue="true"
                                     Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" ToStringFunc="@(e=> e==null?null : $"{e.EmpId}")" />
                </MudItem>
                <MudItem xs="3" sm="3" md="3" lg="3">
                    <MudAutocomplete T="CfgPayrollDefination" @bind-Value="oModelPayroll" SearchFunc="@SearchPayroll" Clearable="true" Label="Select Payroll" Variant="Variant.Text" ResetValueOnEmptyText="true" CoerceText="true" CoerceValue="true"
                                     Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" ToStringFunc="@(e=> e==null?null : $"{e.PayrollName}")" />
                </MudItem>
                <MudItem xs="3" sm="3" md="3" lg="3">
                    <MudAutocomplete T="MstDesignation" @bind-Value="oModelDesignation" SearchFunc="@SearchDesignation" Clearable="true" Label="Select Designation" Variant="Variant.Text" ResetValueOnEmptyText="true" CoerceText="true"
                                     CoerceValue="true" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" ToStringFunc="@(e=> e==null?null : $"{e.Description}")" />
                </MudItem>
                <MudItem xs="3" sm="3" md="3" lg="3">
                    <MudAutocomplete T="MstDepartment" @bind-Value="oModelDepartment" SearchFunc="@SearchDepartment" Clearable="true" Label="Select Department" Variant="Variant.Text" ResetValueOnEmptyText="true" CoerceText="true" CoerceValue="true"
                                     Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" ToStringFunc="@(e=> e==null?null : $"{e.DeptName}")" />
                </MudItem>
                <MudItem xs="3" sm="3" md="3" lg="3">
                    <MudAutocomplete T="MstLocation" @bind-Value="oModelLocation" SearchFunc="@SearchLocation" Clearable="true" Label="Select Location" Variant="Variant.Text" ResetValueOnEmptyText="true" CoerceText="true" CoerceValue="true"
                                     Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" ToStringFunc="@(e=> e==null?null : $"{e.Description}")" />
                </MudItem>
                <MudItem xs="3" sm="3" md="3" lg="3">
                    <MudAutocomplete T="MstBranch" @bind-Value="oModelBranch" SearchFunc="@SearchBranch" Clearable="true" Label="Select Branch" Variant="Variant.Text" ResetValueOnEmptyText="true" CoerceText="true" CoerceValue="true"
                                     Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" ToStringFunc="@(e=> e==null?null : $"{e.Description}")" />
                </MudItem>
                <MudItem xs="3" sm="3" md="3" lg="3">
                    <MudSelect @bind-Value="PayrollPeriod" Disabled="true" Label="Payroll Period*" HelperText="Select Payroll Periods" AdornmentIcon="@Icons.Material.Filled.MergeType" Adornment="Adornment.Start">
                        @foreach (var period in oListPayrollPeriod.ToList())
                        {
                            <MudSelectItem Value="period.PeriodName">@period.PeriodName</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="6" sm="6" md="6" lg="6">
                    <MudDateRangePicker @ref="_picker" PickerVariant="PickerVariant.Dialog" MinDate="@MinDate" DateFormat="MM/dd/yyyy" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.CalendarMonth" Label="From and To Date Range" @bind-DateRange="_dateRange">
                        <PickerActions>
                            <MudButton OnClick="@(() => _picker.Close(false))">Cancel</MudButton>
                            <MudButton Color="Color.Primary" OnClick="@(() => _picker.Close())">Ok</MudButton>
                        </PickerActions>
                    </MudDateRangePicker>
                </MudItem>
                <MudItem xs="6" sm="6" md="6" lg="6">


                    @if (Loading)
                    {
                        <MudItem xs="2" sm="2" md="2" lg="2">
                            <MudText>Loading...</MudText>
                            <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
                        </MudItem>
                    }
                    else
                    {
                        <MudItem xs="12" sm="12" md="12" lg="12" class="text-right custom-btn-design" style="justify-content: flex-end;">
                            <MudButton Variant="Variant.Filled" OnClick="SearchCriteria" StartIcon="@Icons.Material.Filled.Search" Color="Color.Info" Size="Size.Small">Search</MudButton>
                            <MudButton Variant="Variant.Filled" OnClick="Save" StartIcon="@Icons.Material.Filled.Save" Color="Color.Info" Size="Size.Small" style="margin:0 10px;">Save</MudButton>
                            <MudButton Variant="Variant.Filled" OnClick="Post" StartIcon="@Icons.Material.Filled.PostAdd" Color="Color.Info" Size="Size.Small" style="margin:0 10px;">Post</MudButton>
                            <MudButton Variant="Variant.Filled" OnClick="Save" StartIcon="@Icons.Material.Filled.Clear" Color="Color.Error" Size="Size.Small" style="margin:0 10px;">Void</MudButton>
                            <MudButton Variant="Variant.Filled" OnClick="Reset" StartIcon="@Icons.Material.Filled.Refresh" Color="Color.Error">Reset</MudButton>
                        </MudItem>
                    }
                </MudItem>
            </MudGrid>
        </div>
    </div>
    @if (!NextButtonClicked)
    {
        <div class="row mt-5">
            <div class="col-sm-12">
                <MudCard Elevation="5">
                    <MudCardContent>
                        <MudTable Items="@oListFilteredEmployee" class="table-setting" Dense="true" Hover="true" Bordered="true" Striped="true" Filter="new Func<MstEmployee,bool>(FilterFuncFilteredEmployee)">
                            <ToolBarContent>
                                <MudText Typo="Typo.h6">Selected Employees</MudText>
                                <MudSpacer />
                                <MudTextField T="string" @bind-Value="searchStringFilteredEmployee" Placeholder="Search" Variant="Variant.Text" Clearable="true" Immediate="true" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" />
                            </ToolBarContent>
                            <HeaderContent>
                                <MudTh>Delete</MudTh>
                                <MudTh>Employee Code</MudTh>
                                <MudTh>Employee Name</MudTh>
                                <MudTh>Payroll</MudTh>
                                <MudTh>Designation</MudTh>
                                <MudTh>Department</MudTh>
                                <MudTh>Location</MudTh>
                                <MudTh>Branch</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Action"><MudIconButton Color="Color.Error" Variant="Variant.Outlined" Icon="@Icons.Material.Filled.Delete" OnClick="@(() => DeleteFromFilter(context.Id) )" Title="Delete"></MudIconButton></MudTd>
                                <MudTd DataLabel="Department Code">@context.EmpId</MudTd>
                                <MudTd DataLabel="Department Name">@context.FirstName @context.MiddleName @context.LastName</MudTd>
                                <MudTd DataLabel="Active">@context.PayrollName</MudTd>
                                <MudTd DataLabel="Active">@context.DesignationName</MudTd>
                                <MudTd DataLabel="Active">@context.DepartmentName</MudTd>
                                <MudTd DataLabel="Active">@context.LocationName</MudTd>
                                <MudTd DataLabel="Active">@context.BranchName</MudTd>
                            </RowTemplate>
                            <PagerContent>
                                <MudTablePager />
                            </PagerContent>
                        </MudTable>
                    </MudCardContent>
                </MudCard>
            </div>
        </div>
    }

    @if (oListFilteredAttendanceRegister.Count() > 0)
    {
        <div class="row mt-5">
            <div class="col-sm-12">
                <MudCard Elevation="5">
                    <MudCardContent>
                        <MudTable Items="@oListFilteredAttendanceRegister" class="table-setting" Dense="true" Hover="true" Bordered="true" Striped="true" Filter="new Func<TrnsAttendanceRegister,bool>(FilterFuncAttRegister)">
                            <ToolBarContent>
                                <MudText Typo="Typo.h6">Attendance</MudText>
                                <MudSpacer />
                                <MudTextField T="string" @bind-Value="searchStringAttRegister" Placeholder="Search" Variant="Variant.Text" Clearable="true" Immediate="true" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" />
                            </ToolBarContent>
                            <HeaderContent>
                                <MudTh>Employee Code</MudTh>
                                <MudTh>Payroll</MudTh>
                                <MudTh>Period</MudTh>
                                <MudTh>Shift</MudTh>
                                <MudTh>Date</MudTh>
                                <MudTh>Date Day</MudTh>
                                <MudTh>Time In</MudTh>
                                <MudTh>Time Out</MudTh>
                                <MudTh>Work Hour</MudTh>
                                <MudTh>Late In Min</MudTh>
                                <MudTh>Late Out Min</MudTh>
                                <MudTh>Early In Min</MudTh>
                                <MudTh>Early Out Min</MudTh>
                                <MudTh>OT Hour</MudTh>
                                <MudTh>OT Type</MudTh>
                                <MudTh>Leave Duration</MudTh>
                                <MudTh>Leave Type</MudTh>
                                <MudTh>Leave Count</MudTh>
                                <MudTh>Off Day</MudTh>
                                <MudTh>Processed</MudTh>
                                <MudTh>Posted</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Department Code">@context.EmpId</MudTd>
                                <MudTd DataLabel="Active">@context.FkpayrollId</MudTd>
                                <MudTd DataLabel="Active">@context.PeriodId</MudTd>
                                <MudTd DataLabel="Active">@context.ShiftId</MudTd>
                                <MudTd DataLabel="Active">@Convert.ToDateTime(context.Date).ToString("MM/dd/yyyy")</MudTd>
                                <MudTd DataLabel="Active">@context.DateDay</MudTd>
                                <MudTd DataLabel="Active">@context.TimeIn</MudTd>
                                <MudTd DataLabel="Active">@context.TimeOut</MudTd>
                                <MudTd DataLabel="Active">@context.WorkHour</MudTd>
                                <MudTd DataLabel="Active">@context.LateInMin</MudTd>
                                <MudTd DataLabel="Active">@context.LateOutMin</MudTd>
                                <MudTd DataLabel="Active">@context.EarlyInMin</MudTd>
                                <MudTd DataLabel="Active">@context.EarlyOutMin</MudTd>
                                <MudTd DataLabel="Active">@context.Othour</MudTd>
                                <MudTd DataLabel="Active">@context.Ottype</MudTd>
                                <MudTd DataLabel="Active">@context.LeaveDuration</MudTd>
                                <MudTd DataLabel="Active">@context.LeaveType</MudTd>
                                <MudTd DataLabel="Active">@context.LeaveCount</MudTd>
                                <MudTd DataLabel="Active">@context.FlgOffDay</MudTd>
                                <MudTd DataLabel="Active">@context.FlgProcessed</MudTd>
                                <MudTd DataLabel="Active">@context.FlgPosted</MudTd>
                            </RowTemplate>
                            <PagerContent>
                                <MudTablePager />
                            </PagerContent>
                        </MudTable>
                    </MudCardContent>
                </MudCard>
            </div>
        </div>
    }

    <div class="row mt-5">
        <div class="col-sm-12">
            @if (oListFilteredEmployee.Count() > 0)
            {
                @if (oListFilteredAttendanceRegister.Count() > 0)
                {
                    <MudButton Variant="Variant.Filled" OnClick="Back" StartIcon="@Icons.Material.Filled.NavigateBefore" Color="Color.Info" Size="Size.Small">Back</MudButton>
                }
                @if (!NextButtonClicked)
                {
                    <MudButton Variant="Variant.Filled" OnClick="FetchAttendanceProcessed" EndIcon="@Icons.Material.Filled.NavigateNext" Color="Color.Info" Size="Size.Small">Next</MudButton>
                }
            }
        </div>
    </div>
</div>